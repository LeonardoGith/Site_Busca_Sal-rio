# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Check out the code
      uses: actions/checkout@v4
      with:
        path: .  # Specify the current directory
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest flask
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        export PYTHONPATH=.
        echo $PYTHONPATH
        ls /home/runner/work/Site_Busca_Sal-rio/Site_Busca_Sal-rio
        pytest

    - name: Start Flask application
      run: |
        flask run --host=0.0.0.0 --port=5000 &
      env:
        FLASK_APP: app.py

    - name: Install JMeter
      run: |
        sudo apt-get update
        sudo apt-get install -y jmeter
  
    - name: Run JMeter tests
      run: |
        echo "security.allowed_classes=org.apache.jmeter.save.ScriptWrapper" > user.properties
        jmeter -n -t tests/TesteBuscaSalario.jmx -l reports/jmeter_results.jtl -q user.properties -Jxstream.whitelist=org.apache.jmeter.save.ScriptWrapper
        continue-on-error: true
